name: Test
run-name: "Test (${{ github.ref_name }})"

on:
  push:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      check_run_id: ${{ steps.create_check_run.outputs.result }}
    steps:
    - id: create_check_run
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const checkRunSha = "${{ github.sha }}";

          const createCheckRunResponse =
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              status: "in_progress",
              name: "build-checks:test:main",
              head_sha: checkRunSha
            });

          const checkRun = createCheckRunResponse.data;

          console.log(
            `an new checkrun #${checkRun.id} was inserted: `
            + `https://github.com/razzmatazz/gh-actions-playground/runs/${checkRun.id}`);

          return checkRun.id

  failure_or_success:
    runs-on: ubuntu-latest
    needs: init
    steps:
    - uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const checkRunId = ${{ needs.init.outputs.check_run_id }};
          const checkRunSha = "${{ github.sha }}";

          if (${{ github.job }} % 2 == 0) {
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: checkRunId,
              status: "completed",
              conclusion: "failure",
            });

            throw new Error("failed");
          } else {
            const createCheckRunTwoResponse =
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                status: "completed",
                conclusion: "success",
                name: "build-checks:test:main",
                head_sha: checkRunSha
              });
          }
